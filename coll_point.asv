function res = coll_point(coord, target, obstacles, R)
    % line coord-target
    x1 = coord(1);
    y1 = coord(2);
    x2 = target(1);
    y2 = target(2);
    A = (y2 - y1) / (x2 - x1);
    B = -1;
    C = y1 - x1 * A;
    
    inters = [];
    
    for i = obstacles
        d = abs(A * i(1) + B * i(2) + C) / sqrt(A^2 + B^2);
        if d <= R
            fprintf("I: %d", );
            point = inter_lines([0, -C/B], [B, -A], [0, (A*i(2) - B*i(1))/A], [A, B]);
            half_chord = sqrt(R^2 - d^2);
            inters = [inters; point + norm_vec([B, -A]) * half_chord; point - norm_vec([B, -A]) * half_chord];
        end
    end
    fprintf("Inters:");
    disp(inters);
    min = 2390030;
    id_min = 1;
    for i = 1:size(inters)
        if (x1 < inters(i, 1) && inters(i, 1) < x2) || (x1 > inters(i, 1) && inters(i, 1) > x2)
            len_vec = norm([inters(i, 1) - coord(1), inters(i, 2) - coord(2)]);
            if len_vec < min
               min = len_vec;
               id_min = i;
            end
        end
    end
    if size(inters) == 0
        fprintf("No obstacles");
        res = [0,0];
    else
        fprintf("ID: %f, Inters[id]: %f", id_min, inters(id_min));
        res = inters(id_min);
    end
end